# This runs on
#  - push to branch for PR
#  - on main
#  - Potentially nightly (github doesn't like this tho)
---
name: "[C]ontinuous [I]ntegration"
on:
  push:
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  # Disable HUSKY in CI
  HUSKY: 0
  DOCKER_BUILDKIT: 1
  REPOSITORY_NAME: ${{ github.event.repository.name }}
  IMAGE_TAG_SUFFIX: latest

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-python/.github/actions/setup@main
      - uses: percebus/github-actions-nvm/.github/actions/install_and_use@main
      - uses: percebus/github-actions-npm/.github/actions/npm_install@main

      # prettier
      - name: npm run lint:misc
        run: npm run lint:misc

      # standard
      - name: npm run lint:js
        run: npm run lint:js

      # htmllint (via grunt)
      - name: npm run lint:html
        run: npm run lint:html

      # dockerlint
      - name: npm run lint:docker
        run: npm run lint:docker

      # helm lint
      - name: npm run lint:helm
        run: npm run lint:helm

      #
      # test
      - name: npm test
        run: npm test --ignore-scripts

      - uses: percebus/github-actions-testing/.github/actions/junit@main
        if: always()
        with:
          tests_name: Unit Tests
          summary_title: Unit Tests Summary
          check_name: Unit Tests Deltas
          comment_title: Unit Tests Deltas

      # TODO move to -actions-npm
      - name: npm run dist
        run: npm run dist
      - name: dist.zip
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: semantic-release
        run: npm run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  verify__matrix:
    if: github.ref == 'refs/heads/main'
    needs: verify
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        node:
          - 22
          - 23
        OS:
          - ubuntu-latest
          - macOS-latest
          # - windows-latest # FIXME SSH not working, and bower install fails!
    runs-on: ${{ matrix.OS }}
    name: "Verify: node@${{ matrix.node }} @ ${{ matrix.OS }}"
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}
          ls_options: ""

      - uses: percebus/github-actions-python/.github/actions/setup@main
      - uses: percebus/github-actions-node/.github/actions/setup@main
        with:
          node-version: ${{ matrix.node }}

      - uses: percebus/github-actions-npm/.github/actions/npm_install@main
        with:
          ls_options: ""

      - name: npm test
        run: npm test --ignore-scripts

      - uses: percebus/github-actions-testing/.github/actions/test-reporter@main
        if: always()
        with:
          name: Unit Tests @ node:${{ matrix.node }}@${{ matrix.os }}
          reporter: jest-junit
          files_pattern: junit.xml

      - name: npm run dist
        run: npm run dist

  testem:
    if: false # FIXME not working
    name: "test'em"
    needs: verify
    uses: percebus/github-actions-npm/.github/workflows/npm_run_script.yml@main
    with:
      script: testem:ci:dot

  docker_compose:
    name: docker compose
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-common/.github/actions/checkout@main

      # XXX run inside container
      - name: bower install
        run: |
          npm run npm:install:global:ci
          npm run bower:install

      - name: docker compose build
        run: docker compose build --no-cache

  docker_build__matrix:
    name: docker build --target
    # needs: docker_compose  # TODO
    continue-on-error: true
    strategy:
      max-parallel: 10
      matrix:
        include:
          # - base
          # - project
          # - dev
          - target: tested
            scan-image: false

          # final release
          # - release
          - target: webapp
            scan-image: ${{ github.ref == 'refs/heads/main' }}

    runs-on: ubuntu-latest
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      # XXX run inside container
      - name: bower install
        run: |
          npm run npm:install:global:ci
          npm run bower:install

      - uses: percebus/github-actions-docker/.github/actions/docker_build_target@main
        with:
          target: ${{ matrix.target }}
          scan-image: ${{ matrix.scan-image && 'true' || 'false' }}
          image_tag_suffix: ${{ env.IMAGE_TAG_SUFFIX }}

  docker_build_next__matrix:
    if: github.ref == 'refs/heads/main'
    name: docker build --file Dockerfile.next --target
    needs: docker_compose
    continue-on-error: true
    env:
      IMAGE_TAG_SUFFIX: next
    strategy:
      max-parallel: 10
      matrix:
        include:
          # - base
          # - project
          # - dev
          - target: tested
            scan-image: false

          # final release
          # - release
          - target: webapp
            scan-image: ${{ github.ref == 'refs/heads/main' }}

    runs-on: ubuntu-latest
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      # XXX run inside container
      - name: bower install
        run: |
          npm run npm:install:global:ci
          npm run bower:install

      - uses: percebus/github-actions-docker/.github/actions/docker_build_target@main
        with:
          dockerfile: Dockerfile.next
          target: ${{ matrix.target }}
          scan-image: ${{ matrix.scan-image && 'true' || 'false' }}
          image_tag_suffix: ${{ env.IMAGE_TAG_SUFFIX }}

  codeQL:
    needs: verify
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language:
          - javascript
          - actions

    name: "CodeQL: ${{ matrix.language }}"
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - name: setup CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: dist.zip
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: CodeQL
        uses: github/codeql-action/analyze@v3

  deploy-pages:
    if: github.ref == 'refs/heads/main'
    needs: verify
    runs-on: ubuntu-latest
    environment:
      url: ${{ steps.deployment.outputs.page_url }}
      name: github-pages

    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false

    permissions: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
      pages: write
      contents: read
      id-token: write
    steps:
      - name: dist.zip
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: ls
        run: ls -la ./dist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
      - name: Configure GitHub.IO Pages
        uses: actions/configure-pages@v5
      - name: https://percebus.GitHub.IO/npm-web-sampler
        id: deployment
        uses: actions/deploy-pages@v4

  integration-tests:
    if: github.ref == 'refs/heads/main'
    needs: deploy-pages
    name: Integration Tests
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-python/.github/actions/setup@main
      - uses: percebus/github-actions-nvm/.github/actions/install_and_use@main
      - uses: percebus/github-actions-npm/.github/actions/npm_install@main

      - name: npm run jest:ci:rest:npm-web-sampler
        run: npm run jest:ci:rest:npm-web-sampler

      - uses: percebus/github-actions-testing/.github/actions/junit@main
        with:
          tests_name: Integration Tests Results
          summary_title: Integration Tests Summary
          check_name: Integration Tests Deltas
          comment_title: Integration Tests Deltas

  e2e-tests:
    if: github.ref == 'refs/heads/main'
    needs: integration-tests
    name: E2E Tests
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-python/.github/actions/setup@main
      - uses: percebus/github-actions-nvm/.github/actions/install_and_use@main
      - uses: percebus/github-actions-npm/.github/actions/npm_install@main

      - name: npm run jest:playwright
        run: |
          npm run playwright:install
          npm run jest:playwright --ignore-scripts

      - uses: percebus/github-actions-testing/.github/actions/junit@main
        with:
          tests_name: E2E Tests Results
          summary_title: E2E Tests Summary
          check_name: E2E Tests Deltas
          comment_title: E2E Tests Deltas
