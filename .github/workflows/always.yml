name: '[C]ontinuous [I]ntegration'
on:
  push:
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

env:
  # OS: ubuntu-latest # TODO
  ARCHITECTURE: x64

  # PYTHON_VERSION: 3.12 # TODO
  PYTHON_VERSION: 3.x

  DOCKER_BUILDKIT: 1
  DOCKER_TAG_VERSION: latest

  REPOSITORY_NAME: ${{ github.event.repository.name }}

jobs:
  # SRC: https://github.com/semantic-release/semantic-release/blob/master/docs/recipes/ci-configurations/github-actions.md
  semantic-release:
    name: semantic-release
    runs-on: ubuntu-latest
    permissions:
      issues: write # to be able to comment on released issues
      contents: write # to be able to publish a GitHub release
      id-token: write # to enable use of OIDC for npm provenance
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-common/.github/actions/checkout@main
      - uses: percebus/github-actions-node/.github/actions/node_setup@main
      - uses: percebus/github-actions-npm/.github/actions/npm_install@main

      - name: semantic-release
        run: npm run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  # TODO? Move into pull_requests?
  # Since it has to do with dependency-review?
  npm_audit:
    name: npm audit
    needs: semantic-release
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-common/.github/actions/checkout@main
      - uses: percebus/github-actions-node/.github/actions/node_setup@main
      - uses: percebus/github-actions-npm/.github/actions/npm_install@main

      - name: npm audit
        run: npm audit
        continue-on-error: true

  build:
    name: Build
    needs: semantic-release
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-common/.github/actions/checkout@main

      - name: setup python @ ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ env.ARCHITECTURE }}

      - uses: percebus/github-actions-node/.github/actions/node_setup@main
      - uses: percebus/github-actions-npm/.github/actions/npm_install@main

      - name: ls bower_components
        run: ls -la ./bower_components

      # prettier
      - name: npm run lint:misc
        run: npm run lint:misc

      # standard
      - name: npm run lint:js
        run: npm run lint:js

      # htmllint (via grunt)
      - name: npm run lint:html
        run: npm run lint:html

      # dockerlint
      - name: npm run lint:docker
        run: npm run lint:docker

      # helm lint
      - name: npm run lint:helm
        run: npm run lint:helm

      #
      # test
      - name: npm test
        run: npm test --ignore-scripts
      - name: junit.xml
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit Tests
          path: junit.xml
          reporter: jest-junit

      - name: npm run dist
        run: npm run dist
      - name: dist.zip
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist

  builds:
    if: github.ref == 'refs/heads/main'
    needs: build
    strategy:
      max-parallel: 6
      matrix:
        node:
          - 22
          - 23
        os:
          - ubuntu-latest
          - macOS-latest
          # - windows-latest # FIXME SSH not working, and bower install fails!
    runs-on: ${{ matrix.os }}
    name: Build @ node:${{ matrix.node }}@${{ matrix.os }}
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ls_options: ''

      - name: setup python @ ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ env.ARCHITECTURE }}

      - uses: percebus/github-actions-node/.github/actions/node_setup@main
        with:
          node-version: ${{ matrix.node }}

      - uses: percebus/github-actions-npm/.github/actions/npm_install@main
        with:
          ls_options: ''

      - name: npm test
        run: npm test --ignore-scripts
      - name: junit.xml
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit Tests @ node:${{ matrix.node }}@${{ matrix.os }}
          path: junit.xml
          reporter: jest-junit

      - name: npm run dist
        run: npm run dist

  docker_compose:
    name: docker compose
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-common/.github/actions/checkout@main

      # XXX run inside container
      - name: bower install
        run: |
          npm run npm:install:global:ci
          npm run bower:install
      - name: docker compose build
        run: docker compose build

  docker_build_matrix:
    if: github.ref == 'refs/heads/main'
    name: docker build --target
    needs: docker_compose
    continue-on-error: true
    strategy:
      max-parallel: 10
      matrix:
        DOCKER_TARGET:
          # - base
          # - project
          # - dev
          - test

          # final release
          # - release
          - webapp

    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-common/.github/actions/checkout@main

      # XXX run inside container
      - name: bower install
        run: |
          npm run npm:install:global:ci
          npm run bower:install
      - name: 'docker build: ${{ matrix.DOCKER_TARGET }}'
        run: |
          docker build . \
            --target ${{ matrix.DOCKER_TARGET }} \
            --tag ${{ env.REPOSITORY_NAME }}.${{ matrix.DOCKER_TARGET }}:${{ env.DOCKER_TAG_VERSION }}

      - name: Scan ${{ env.REPOSITORY_NAME }}.${{ matrix.DOCKER_TARGET }}:${{ env.DOCKER_TAG_VERSION }}
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REPOSITORY_NAME }}.${{ matrix.DOCKER_TARGET }}:${{ env.DOCKER_TAG_VERSION }}
          fail-build: false
          output-format: sarif
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  docker_next_build_matrix:
    if: github.ref == 'refs/heads/main'
    name: docker build --file Dockerfile.next --target
    needs: docker_compose
    continue-on-error: true
    env:
      DOCKER_TAG_VERSION: next
    strategy:
      max-parallel: 10
      matrix:
        DOCKER_TARGET:
          # - base
          # - project
          # - dev
          - test

          # final release
          # - release
          - webapp

    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-common/.github/actions/checkout@main

      # XXX run inside container
      - name: bower install
        run: |
          npm run npm:install:global:ci
          npm run bower:install
      - name: 'docker build: ${{ matrix.DOCKER_TARGET }}'
        run: |
          docker build . \
            --file Dockerfile.next \
            --target ${{ matrix.DOCKER_TARGET }} \
            --tag ${{ env.REPOSITORY_NAME }}.${{ matrix.DOCKER_TARGET }}:${{ env.DOCKER_TAG_VERSION }}

      - name: Scan ${{ env.REPOSITORY_NAME }}.${{ matrix.DOCKER_TARGET }}:${{ env.DOCKER_TAG_VERSION }}
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REPOSITORY_NAME }}.${{ matrix.DOCKER_TARGET }}:${{ env.DOCKER_TAG_VERSION }}
          fail-build: false
          output-format: sarif
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  codeQL:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

    name: 'CodeQL: ${{ matrix.language }}'
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - name: dist.zip
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: CodeQL
        uses: github/codeql-action/analyze@v3

  deploy-pages:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      url: ${{ steps.deployment.outputs.page_url }}
      name: github-pages

    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: 'pages'
      cancel-in-progress: false

    permissions: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
      pages: write
      contents: read
      id-token: write
    steps:
      - name: dist.zip
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: ls
        run: ls -la ./dist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
      - name: Configure GitHub.IO Pages
        uses: actions/configure-pages@v5
      - name: https://percebus.GitHub.IO/npm-web-sampler
        id: deployment
        uses: actions/deploy-pages@v4

  validate:
    if: github.ref == 'refs/heads/main'
    needs: deploy-pages
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-common/.github/actions/checkout@main

      - name: setup python @ ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ env.ARCHITECTURE }}

      - uses: percebus/github-actions-node/.github/actions/node_setup@main
      - uses: percebus/github-actions-npm/.github/actions/npm_install@main

      - name: npm run validate
        run: npm run validate
      - name: junit.xml
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Integration Tests
          path: junit.xml
          reporter: jest-junit
