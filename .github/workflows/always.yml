name: Verify
on:
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls -la

      - name: setup python@'3.x'
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          architecture: "x64"
      - name: setup node@16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm ci
      - name: ls node_modules
        run: ls -la ./node_modules
      - name: npm audit
        run: npm audit
        continue-on-error: true # XXX?

      - name: npm test
        run: npm test
      - name: junit.xml
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit Tests
          path: junit.xml
          reporter: jest-junit

      - name: npm run dist
        run: npm run dist
      - name: dist.zip
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  builds:
    if: github.ref == 'refs/heads/main'
    needs: build
    strategy:
      max-parallel: 6
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        node: [16, 18]
    runs-on: ${{ matrix.os }}
    name: Build @ node:${{ matrix.node }}@${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup python@3.X
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          architecture: "x64"
      - name: setup node@${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm ci

      - name: dist.zip
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: ls
        run: ls # -la fails in windows

      - name: npm test
        run: npm test
      - name: junit.xml
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit Tests @ node:${{ matrix.node }}@${{ matrix.os }}
          path: junit.xml
          reporter: jest-junit
      - name: npm run dist
        run: npm run dist
      - name: dist.zip
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  codeQL:
    #   if: github.ref == 'refs/heads/main' # TODO?
    needs: build
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]

    name: "CodeQL: ${{ matrix.language }}"
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: dist.zip
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: CodeQL
        uses: github/codeql-action/analyze@v2

  validate:
    if: github.ref == 'refs/heads/main'
    #   needs: build # TODO? or XXX?
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls -la

      - name: setup python@3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          architecture: "x64"
      - name: setup node@16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm ci

      - name: npm run validate
        run: npm run validate
      - name: junit.xml
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Integration Tests
          path: junit.xml
          reporter: jest-junit
