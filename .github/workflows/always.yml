name: '[C]ontinuous [I]ntegration'
on:
  push:
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

env:
  # Disable HUSKY in CI
  HUSKY: 0

  # OS: ubuntu-latest # TODO
  ARCHITECTURE: x64

  # PYTHON_VERSION: 3.12 # TODO
  PYTHON_VERSION: 3.x

  DOCKER_BUILDKIT: 1

  REPOSITORY_NAME: ${{ github.event.repository.name }}

  SSH_KEY_PRIVATE: ${{ secrets.SSH_KEY_PRIVATE }}

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - name: setup python @ ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ env.ARCHITECTURE }}

      - uses: percebus/github-actions-node/.github/actions/node_setup@main
      - uses: percebus/github-actions-npm/.github/actions/npm_install@main

      # prettier
      - name: npm run lint:misc
        run: npm run lint:misc

      # standard
      - name: npm run lint:js
        run: npm run lint:js

      # htmllint (via grunt)
      - name: npm run lint:html
        run: npm run lint:html

      # dockerlint
      - name: npm run lint:docker
        run: npm run lint:docker

      # helm lint
      - name: npm run lint:helm
        run: npm run lint:helm

      #
      # test
      - name: npm test
        run: npm test --ignore-scripts

      - uses: percebus/github-actions-testing/.github/actions/junit@main
        if: always()

      - name: npm run dist
        run: npm run dist
      - name: dist.zip
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: semantic-release
        run: npm run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  verify_matrix:
    if: github.ref == 'refs/heads/main'
    needs: verify
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        node:
          - 22
          - 23
        os:
          - ubuntu-latest
          - macOS-latest
          # - windows-latest # FIXME SSH not working, and bower install fails!
    runs-on: ${{ matrix.os }}
    name: Verify @ node:${{ matrix.node }}@${{ matrix.os }}
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}
          ls_options: ''

      - name: setup python @ ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ env.ARCHITECTURE }}

      - uses: percebus/github-actions-node/.github/actions/node_setup@main
        with:
          node-version: ${{ matrix.node }}

      - uses: percebus/github-actions-npm/.github/actions/npm_install@main
        with:
          ls_options: ''

      - name: npm test
        run: npm test --ignore-scripts

      - uses: percebus/github-actions-testing/.github/actions/test-reporter@main
        if: always()
        with:
          name: Unit Tests @ node:${{ matrix.node }}@${{ matrix.os }}
          reporter: jest-junit
          files_pattern: junit.xml

      - name: npm run dist
        run: npm run dist

  testem:
    if: false # FIXME not working
    name: "test'em"
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
      - uses: percebus/github-actions-node/.github/actions/node_setup@main
      - uses: percebus/github-actions-npm/.github/actions/npm_install@main

      - name: testem ci
        run: npm run testem:ci:dot

  docker_compose:
    name: docker compose
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ env.SSH_KEY_PRIVATE }}

      - uses: percebus/github-actions-common/.github/actions/checkout@main

      # XXX run inside container
      - name: bower install
        run: |
          npm run npm:install:global:ci
          npm run bower:install
      - name: docker compose build
        run: docker compose build

  docker_build_matrix:
    # if: github.ref == 'refs/heads/main' # TODO
    name: docker build --file ${{ inputs.docker_file }} --target
    continue-on-error: true
    strategy:
      max-parallel: 10
      matrix:
        docker_target:
          # - base
          # - project
          # - dev
          - test

          # final release
          # - release
          - webapp

        include:
          - docker_file: ./Dockerfile
            image_tag: latest

          - docker_file: ./Dockerfile.next
            image_tag: next

    runs-on: ubuntu-latest
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ssh-private-key: ${{ secrets.ssh-private-key }}

      # XXX run inside container
      - name: bower install
        run: |
          npm run npm:install:global:ci
          npm run bower:install
      - name: 'docker build: ${{ matrix.docker_target }}'
        run: |
          docker build . \
            --file ${{ inputs.docker_file }} \
            --target ${{ matrix.docker_target }} \
            --tag ${{ env.REPOSITORY_NAME }}.${{ matrix.docker_target }}:${{ inputs.image_tag }}

      - name: Scan ${{ env.REPOSITORY_NAME }}.${{ matrix.docker_target }}:${{ inputs.image_tag }}
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REPOSITORY_NAME }}.${{ matrix.docker_target }}:${{ inputs.image_tag }}
          fail-build: false
          output-format: sarif
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}


  docker_next_build_matrix:
    needs: docker_compose
    uses: ./.github/workflows/docker_build.yml
    with:
      ssh-private-key: '${{ secrets.SSH_KEY_PRIVATE }}'
      docker_file: Dockerfile.next
      image_tag: next

  codeQL:
    needs: verify
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language:
          - javascript

    name: 'CodeQL: ${{ matrix.language }}'
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - name: dist.zip
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: CodeQL
        uses: github/codeql-action/analyze@v3

  deploy-pages:
    if: github.ref == 'refs/heads/main'
    needs: verify
    runs-on: ubuntu-latest
    environment:
      url: ${{ steps.deployment.outputs.page_url }}
      name: github-pages

    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: 'pages'
      cancel-in-progress: false

    permissions: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
      pages: write
      contents: read
      id-token: write
    steps:
      - name: dist.zip
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: ls
        run: ls -la ./dist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
      - name: Configure GitHub.IO Pages
        uses: actions/configure-pages@v5
      - name: https://percebus.GitHub.IO/npm-web-sampler
        id: deployment
        uses: actions/deploy-pages@v4

  validate:
    if: github.ref == 'refs/heads/main'
    needs: deploy-pages
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - uses: percebus/github-actions-common/.github/actions/checkout@main
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - name: setup python @ ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ env.ARCHITECTURE }}

      - uses: percebus/github-actions-node/.github/actions/node_setup@main
      - uses: percebus/github-actions-npm/.github/actions/npm_install@main

      - name: npm run validate
        run: npm run validate
      - uses: percebus/github-actions-testing/.github/actions/test-reporter@main
        with:
          name: Integration Tests
          reporter: jest-junit
          files_pattern: junit.xml
