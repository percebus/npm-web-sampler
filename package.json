{
  "name": "npm-web-sampler",
  "version": "1.2.0",
  "description": "npm packages sampler",
  "main": "Gruntfile.js",
  "scripts": {
    "pip:upgrade:pip": "python -m pip install --upgrade pip",
    "prepip:upgrade:requirements": "npm run pip:upgrade:pip",
    "pip:upgrade:requirements": "python -m pip install --upgrade --requirement ./requirements.upgrade.txt",
    "prepipx:install": "npm run pip:upgrade:requirements",
    "pipx:install": "bash scripts/pipx/install.ba.sh",
    "pip:freeze": "python -m pip freeze > requirements.frozen.txt",
    "pip:install:dev": "python -m pip install -r ./requirements.dev.txt",
    "prepip:install:release": "npm run pipx:install",
    "pip:install:release": "python -m pip install -r ./requirements.release.txt",
    "prepip:install:all": "npm run pipx:install",
    "pip:install:all": "python -m pip install -r ./requirements.txt",
    "postpip:install:all": "npm run pip:freeze",
    "npm:install:global:ci": "npm install --force --location=global bower grunt-cli",
    "npm:install:global:all": "npm install --location=global yarn bower grunt-cli open-cli",
    "setup": "npm run pip:install:all && npm run npm:install:global:all",
    "setup:ci": "npm run pip:install:all && npm run npm:install:global:ci",
    "setup:release": "npm run pip:install:release",
    "scripts:prepare": "bash repos/commons/scripts/prepare.ba.sh",
    "bower:update": "bower update --allow-root",
    "prebower:install": "npm run bower:update",
    "bower:install": "bower install --allow-root",
    "postbower:install": "npm run scripts:prepare",
    "postinstall": "npm run bower:install",
    "yarn:licenses:list:prod": "yarn licenses list --prod > dist/vendor/LICENSES.txt",
    "yarn:licenses:generate-disclaimer:prod": "yarn licenses generate-disclaimer --prod > dist/vendor/LICENSES.md",
    "yarn:licenses:prod": "npm run yarn:licenses:list:prod && npm run yarn:licenses:generate-disclaimer:prod",
    "LICENSES": "npm run yarn:licenses:prod",
    "prettier": "prettier .",
    "prettier:check": "npm run prettier -- --check",
    "prettier:write": "npm run prettier -- --write",
    "grunt": "grunt --verbose --color",
    "grunt:htmllint": "npm run grunt -- htmllint",
    "grunt:clean": "npm run grunt -- clean",
    "grunt:copy": "npm run grunt -- copy",
    "grunt:dist": "npm run grunt -- dist",
    "standard": "standard *.js __tests__/**/*.js --verbose",
    "standard:check": "npm run standard",
    "standard:fix": "npm run standard -- --fix",
    "dockerlint": "dockerlint -d",
    "dockerlint:Dockerfile": "npm run dockerlint -- -f Dockerfile",
    "dockerlint:Dockerfile.next": "npm run dockerlint -- -f Dockerfile.next",
    "dockerlint:all": "npm run dockerlint:Dockerfile && npm run dockerlint:Dockerfile.next",
    "helm:lint": "helm lint ./helm",
    "lint-staged": "lint-staged",
    "lint:misc": "npm run prettier:check",
    "lint:js": "npm run standard:check",
    "lint:html": "npm run grunt:htmllint",
    "lint:docker": "npm run dockerlint:all",
    "lint:helm": "npm run helm:lint",
    "lint": "npm run prettier:check && npm run standard:check && npm run grunt:htmllint && npm run dockerlint:all && npm run helm:lint",
    "style": "npm run prettier:write && npm run standard:fix",
    "poststyle": "npm run lint",
    "browserslist:update-db": "browserslist --update-db",
    "jest:ci": "jest --ci",
    "prejest:ci:unit": "npm run browserslist:update-db",
    "jest:ci:unit": "npm run jest:ci -- unit.spec.js",
    "jest:ci:rest": "npm run jest:ci -- rest.spec.js",
    "jest:ci:rest:npm-web-sampler": "npm run jest:ci:rest -- --rootDir=__tests__/npm-web-sampler",
    "jest:ci:rest:google": "npm run jest:ci:rest -- --rootDir=__tests__/com/google",
    "jest:ci:rest:HTTPbin": "npm run jest:ci:rest -- --rootDir=__tests__/org/HTTPbin",
    "testem:ci": "testem ci",
    "testem:ci:dot": "npm run testem:ci -- --reporter dot",
    "testem:ci:tap": "npm run testem:ci -- --reporter tap > test/results/browsers/testem.tap",
    "testem:ci:xunit": "npm run testem:ci -- --reporter xunit > test/results/browsers/testem.xunit.xml",
    "testem:ci:all": "npm run testem:ci:tap && npm run testem:ci:xunit",
    "pretest": "npm run lint",
    "test": "npm run jest:ci:unit",
    "semantic-release": "semantic-release",
    "tag": "npm run semantic-release",
    "dist": "npm run grunt:dist",
    "postdist": "npm run LICENSES",
    "husky": "husky",
    "husky:install": "husky",
    "husky:uninstall": "git config --unset core.hooksPath",
    "python:http.server": "cd dist && python -m http.server 8080",
    "docker:registry:run": "docker run -d -p 5000:5000 --name registry registry:2.7",
    "docker:registry:logs": "docker logs registry",
    "docker:this:build": "docker build --no-cache --pull --tag localhost:5000/npm-web-sampler:latest .",
    "docker:this:build:test": "npm run docker:this:build -- --target test",
    "docker:this:push": "docker push localhost:5000/npm-web-sampler:latest",
    "docker:this:images": "docker images --all | grep -a 'npm-web-sampler'",
    "docker:this:images:rm": "docker images --all | grep -a 'npm-web-sampler' | awk '{print $3}' | xargs docker rmi --force",
    "docker:this:run": "docker run -p 8080:8080 npm-web-sampler",
    "docker:this:run:ls": "npm run docker:this:run -- ls -la",
    "docker:this:run:default": "npm run docker:this:run",
    "docker:this:containers": "docker ps --all | grep -a 'npm-web-sampler'",
    "docker:this:containers:running": "docker ps --all --filter status=running | grep -a 'npm-web-sampler'",
    "docker:this:containers:stop": "docker ps --all --filter status=running | grep -a 'npm-web-sampler' | awk '{print $1}' | xargs docker stop",
    "docker:this:clean": "npm run docker:this:containers:stop && npm run docker:this:images:rm",
    "docker:all:exited:containers:rm": "docker ps --all --filter status=exited | tail -n +2 | awk '{print $1}' | xargs docker rm",
    "docker:all:prune": "docker builder prune --all --force",
    "_docker:all:containers:rm": "docker rm $(docker ps --all --quiet)",
    "predocker:this:clean": "npm run docker:this:clean",
    "docker:clean": "npm run docker:all:exited:containers:rm && npm run docker:all:prune",
    "docker:compose:up": "docker compose up --build",
    "minikube:start": "minikube start",
    "verify": "npm test && npm run dist",
    "verify:docker": "npm run docker:this:build:test",
    "start": "npm run python:http.server",
    "start:docker": "docker:compose:up",
    "browser": "open-cli http://127.0.0.1:8080",
    "validate": "npm run jest:ci:rest:npm-web-sampler"
  },
  "standard": {
    "env": [
      "jest"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/percebus/npm-web-sampler.git"
  },
  "keywords": [
    "npm",
    "git",
    "html",
    "lint",
    "grunt",
    "jest",
    "frisby"
  ],
  "author": "percebus",
  "license": "SEE LICENSE IN LICENSE.md",
  "bugs": {
    "url": "https://github.com/percebus/npm-web-sampler/issues"
  },
  "homepage": "https://github.com/percebus/npm-web-sampler#readme",
  "devDependencies": {
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/commit-analyzer": "^13.0.1",
    "@semantic-release/exec": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^11.0.1",
    "@semantic-release/npm": "^12.0.1",
    "@semantic-release/release-notes-generator": "^14.0.3",
    "browserslist": "latest",
    "dockerlint": "^0.3.9",
    "frisby": "^2.1.3",
    "grunt": "^1.6.1",
    "grunt-contrib-clean": "^2.0.1",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-cssmin": "^5.0.0",
    "grunt-contrib-htmlmin": "^3.1.0",
    "grunt-htmllint": "^0.3.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-github-actions": "^0.5.0",
    "jest-junit": "^16.0.0",
    "lint-staged": "^15.4.1",
    "load-grunt-tasks": "^5.1.0",
    "lodash": "^4.17.21",
    "prettier": "^3.4.2",
    "standard": "^17.1.2",
    "testem": "^3.15.2"
  },
  "dependencies": {
    "bootstrap": "^5.3.3"
  }
}
